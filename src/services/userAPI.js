import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { BE_API_LOCAL } from "../config";
import { selectTokens } from "../slices/auth.slice";

// Define a service using a base URL and expected endpoints
export const userAPI = createApi({
    reducerPath: "userManagement",
    tagTypes: ["UserList"],
    baseQuery: fetchBaseQuery({
        baseUrl: BE_API_LOCAL,
        prepareHeaders: (headers, { getState }) => {
            const token = selectTokens(getState());
            if (token) {
                headers.append("Authorization", `Bearer ${token}`);
            }
            headers.append("Content-Type", "application/json");
            return headers;
        },
    }),
    endpoints: (builder) => ({
        // Fetch all users
        getAllUser: builder.query({
            query: () => `users`,
            providesTags: (result) =>
                result
                    ? result.map(({ id }) => ({ type: "UserList", id }))
                    : [{ type: "UserList", id: "LIST" }],
        }),
        // Fetch a single user's profile by ID
        getUserProfile: builder.query({
            query: (userId) => ({
                url: `user/${userId}`,
                method: "GET",
            }),
            providesTags: (result, error, userId) => [{ type: "UserList", id: userId }],
        })
    }),
});

// Export hooks generated by the endpoints
export const {
    useGetAllUserQuery,
    useGetUserProfileQuery
} = userAPI;
